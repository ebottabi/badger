   Compiling badger v0.1.0 (/Users/ebot/personal/badger)
warning: unused import: `anyhow::Result`
 --> src/core/dex_types.rs:1:5
  |
1 | use anyhow::Result;
  |     ^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `solana_sdk::pubkey::Pubkey`
 --> src/core/dex_types.rs:4:5
  |
4 | use solana_sdk::pubkey::Pubkey;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Path`
  --> src/core/wallet_management.rs:13:17
   |
13 | use std::path::{Path, PathBuf};
   |                 ^^^^

warning: unused import: `error`
  --> src/core/wallet_management.rs:14:27
   |
14 | use tracing::{info, warn, error, debug};
   |                           ^^^^^

warning: unused import: `warn`
 --> src/ingest/dex_parsers.rs:4:22
  |
4 | use tracing::{debug, warn};
  |                      ^^^^

warning: unused import: `error`
 --> src/transport/enhanced_bus.rs:3:28
  |
3 | use tracing::{debug, warn, error, instrument};
  |                            ^^^^^

warning: unused import: `error`
 --> src/transport/routing.rs:5:28
  |
5 | use tracing::{debug, warn, error, instrument};
  |                            ^^^^^

warning: unused import: `EnhancedTradingSignal`
  --> src/transport/routing.rs:10:72
   |
10 | use crate::transport::{EnhancedTransportBus, WalletEvent, SystemAlert, EnhancedTradingSignal};
   |                                                                        ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::VecDeque`
 --> src/database/mod.rs:1:5
  |
1 | use std::collections::VecDeque;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Duration` and `Instant`
 --> src/database/mod.rs:3:17
  |
3 | use std::time::{Duration, Instant};
  |                 ^^^^^^^^  ^^^^^^^

warning: unused imports: `Mutex` and `broadcast`
 --> src/database/mod.rs:4:19
  |
4 | use tokio::sync::{broadcast, Mutex};
  |                   ^^^^^^^^^  ^^^^^

warning: unused imports: `debug`, `instrument`, and `warn`
 --> src/database/mod.rs:5:21
  |
5 | use tracing::{info, warn, error, debug, instrument};
  |                     ^^^^         ^^^^^  ^^^^^^^^^^

warning: unused imports: `MarketEvent` and `TradingSignal`
 --> src/database/mod.rs:7:19
  |
7 | use crate::core::{MarketEvent, TradingSignal};
  |                   ^^^^^^^^^^^  ^^^^^^^^^^^^^

warning: unused imports: `SystemAlert` and `WalletEvent`
 --> src/database/mod.rs:8:63
  |
8 | use crate::transport::{EnhancedTransportBus, ServiceRegistry, WalletEvent, SystemAlert};
  |                                                               ^^^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/database/models.rs:3:5
  |
3 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `DateTime`
 --> src/database/models.rs:5:14
  |
5 | use chrono::{DateTime, Utc};
  |              ^^^^^^^^

warning: unused import: `Instant`
 --> src/database/services.rs:2:27
  |
2 | use std::time::{Duration, Instant};
  |                           ^^^^^^^

warning: unused import: `tokio::sync::broadcast`
 --> src/database/services.rs:3:5
  |
3 | use tokio::sync::broadcast;
  |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `error`
 --> src/database/services.rs:4:27
  |
4 | use tracing::{info, warn, error, debug, instrument};
  |                           ^^^^^

warning: unused imports: `SystemAlert` and `WalletEvent`
 --> src/database/services.rs:7:63
  |
7 | use crate::transport::{EnhancedTransportBus, ServiceRegistry, WalletEvent, SystemAlert};
  |                                                               ^^^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `AnalyticsData`
  --> src/database/services.rs:10:37
   |
10 | use super::models::{BadgerDatabase, AnalyticsData, WalletScore};
   |                                     ^^^^^^^^^^^^^

warning: unused import: `warn`
 --> src/database/batch.rs:7:28
  |
7 | use tracing::{debug, info, warn, error, instrument};
  |                            ^^^^

warning: unused import: `warn`
 --> src/database/validation.rs:4:22
  |
4 | use tracing::{debug, warn, error};
  |                      ^^^^

warning: unused import: `Path`
 --> src/database/cleanup.rs:1:17
  |
1 | use std::path::{Path, PathBuf};
  |                 ^^^^

warning: unused import: `DateTime`
 --> src/database/analytics/position_tracker.rs:3:14
  |
3 | use chrono::{DateTime, Utc};
  |              ^^^^^^^^

warning: unused imports: `debug` and `error`
 --> src/database/analytics/position_tracker.rs:6:15
  |
6 | use tracing::{debug, info, warn, error, instrument};
  |               ^^^^^              ^^^^^

warning: unused import: `MarketEvent`
 --> src/database/analytics/position_tracker.rs:8:19
  |
8 | use crate::core::{MarketEvent, TradingSignal};
  |                   ^^^^^^^^^^^

warning: unused import: `DateTime`
 --> src/database/analytics/pnl_calculator.rs:3:14
  |
3 | use chrono::{DateTime, Utc};
  |              ^^^^^^^^

warning: unused imports: `error` and `warn`
 --> src/database/analytics/pnl_calculator.rs:6:28
  |
6 | use tracing::{debug, info, warn, error, instrument};
  |                            ^^^^  ^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/database/analytics/performance_tracker.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `DateTime` and `Duration`
 --> src/database/analytics/performance_tracker.rs:3:14
  |
3 | use chrono::{DateTime, Utc, Duration};
  |              ^^^^^^^^       ^^^^^^^^

warning: unused imports: `error` and `warn`
 --> src/database/analytics/performance_tracker.rs:6:28
  |
6 | use tracing::{debug, info, warn, error, instrument};
  |                            ^^^^  ^^^^^

warning: unused import: `PortfolioPnL`
 --> src/database/analytics/performance_tracker.rs:9:44
  |
9 | use super::pnl_calculator::{PnLCalculator, PortfolioPnL};
  |                                            ^^^^^^^^^^^^

warning: unused import: `DateTime`
 --> src/database/analytics/insider_analytics.rs:3:14
  |
3 | use chrono::{DateTime, Utc};
  |              ^^^^^^^^

warning: unused imports: `error` and `warn`
 --> src/database/analytics/insider_analytics.rs:6:28
  |
6 | use tracing::{debug, info, warn, error, instrument};
  |                            ^^^^  ^^^^^

warning: unused imports: `MarketEvent` and `TradingSignal`
  --> src/database/analytics/insider_analytics.rs:10:19
   |
10 | use crate::core::{MarketEvent, TradingSignal};
   |                   ^^^^^^^^^^^  ^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `reset-db`
   --> src/database/migrations.rs:362:11
    |
362 |     #[cfg(feature = "reset-db")]
    |           ^^^^^^^^^^^^^^^^^^^^ help: remove the condition
    |
    = note: no expected values for `feature`
    = help: consider adding `reset-db` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unused import: `std::collections::HashMap`
  --> src/intelligence/insider_detector.rs:10:5
   |
10 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `error` and `warn`
  --> src/intelligence/insider_detector.rs:13:28
   |
13 | use tracing::{info, debug, warn, error, instrument};
   |                            ^^^^  ^^^^^

warning: unused imports: `error` and `warn`
  --> src/intelligence/performance_tracker.rs:15:28
   |
15 | use tracing::{info, debug, warn, error, instrument};
   |                            ^^^^  ^^^^^

warning: unused import: `std::sync::atomic::AtomicU64`
 --> src/intelligence/types.rs:3:5
  |
3 | use std::sync::atomic::AtomicU64;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `DateTime` and `Utc`
 --> src/intelligence/types.rs:4:14
  |
4 | use chrono::{DateTime, Utc};
  |              ^^^^^^^^  ^^^

warning: unused import: `File`
 --> src/intelligence/mmap_db.rs:8:15
  |
8 | use std::fs::{File, OpenOptions};
  |               ^^^^

warning: unused import: `xxhash_rust::xxh64::xxh64`
  --> src/intelligence/mmap_db.rs:10:5
   |
10 | use xxhash_rust::xxh64::xxh64;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `debug`, `error`, and `warn`
  --> src/intelligence/mmap_db.rs:11:21
   |
11 | use tracing::{info, debug, warn, error};
   |                     ^^^^^  ^^^^  ^^^^^

warning: unused import: `std::collections::HashMap`
  --> src/trading/jupiter_client.rs:10:5
   |
10 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::intelligence::SignalUrgency`
  --> src/trading/execution_engine.rs:14:5
   |
14 | use crate::intelligence::SignalUrgency;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated function `base64::encode`: Use Engine::encode
   --> src/core/wallet_management.rs:292:20
    |
292 |         Ok(base64::encode(encrypted))
    |                    ^^^^^^
    |
    = note: `#[warn(deprecated)]` on by default

warning: use of deprecated function `base64::decode`: Use Engine::decode
   --> src/core/wallet_management.rs:303:39
    |
303 |         let encrypted_bytes = base64::decode(encrypted_key)
    |                                       ^^^^^^

warning: use of deprecated function `base64::decode`: Use Engine::decode
   --> src/ingest/dex_parsers.rs:134:55
    |
134 |                     if let Ok(decoded_data) = base64::decode(data_str) {
    |                                                       ^^^^^^

warning: use of deprecated function `base64::decode`: Use Engine::decode
   --> src/trading/jupiter_client.rs:505:41
    |
505 |         let transaction_bytes = base64::decode(&swap_response.swap_transaction)
    |                                         ^^^^^^

warning: unreachable statement
   --> src/database/analytics/performance_tracker.rs:104:9
    |
101 |           return Ok(());
    |           ------------- any code following this expression is unreachable
...
104 | /         let _create_performance_snapshots = r#"
105 | |             CREATE TABLE IF NOT EXISTS performance_snapshots (
106 | |                 id INTEGER PRIMARY KEY AUTOINCREMENT,
107 | |                 period_type TEXT NOT NULL CHECK (period_type IN ('HOURLY', 'DAILY', 'WEEKLY', 'MONTHLY')),
...   |
133 | |         "#;
    | |___________^ unreachable statement
    |
    = note: `#[warn(unreachable_code)]` on by default

warning: unused variable: `create_signal_performance`
   --> src/database/analytics/performance_tracker.rs:135:13
    |
135 |         let create_signal_performance = r#"
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_create_signal_performance`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `create_trading_sessions`
   --> src/database/analytics/performance_tracker.rs:154:13
    |
154 |         let create_trading_sessions = r#"
    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_create_trading_sessions`

warning: unused variable: `create_indexes`
   --> src/database/analytics/performance_tracker.rs:173:13
    |
173 |         let create_indexes = vec![
    |             ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_create_indexes`

warning: variable `total_profit` is assigned to, but never used
   --> src/intelligence/insider_detector.rs:493:17
    |
493 |         let mut total_profit = 0.0f64;
    |                 ^^^^^^^^^^^^
    |
    = note: consider using `_total_profit` instead

warning: use of deprecated method `chrono::NaiveDateTime::timestamp`: use `.and_utc().timestamp()` instead
   --> src/intelligence/copy_trader.rs:421:81
    |
421 |         let today_start = Utc::now().date_naive().and_hms_opt(0, 0, 0).unwrap().timestamp();
    |                                                                                 ^^^^^^^^^

warning: use of deprecated method `chrono::NaiveDateTime::timestamp`: use `.and_utc().timestamp()` instead
   --> src/intelligence/copy_trader.rs:443:81
    |
443 |         let today_start = Utc::now().date_naive().and_hms_opt(0, 0, 0).unwrap().timestamp();
    |                                                                                 ^^^^^^^^^

warning: unused variable: `result_str`
   --> src/intelligence/background_sync.rs:277:13
    |
277 |         let result_str = match result.result {
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_result_str`

warning: unused variable: `exit_reason_str`
   --> src/intelligence/background_sync.rs:283:13
    |
283 |         let exit_reason_str = match result.exit_reason {
    |             ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_exit_reason_str`

warning: unused variable: `recent_cutoff`
   --> src/intelligence/performance_tracker.rs:213:13
    |
213 |         let recent_cutoff = Utc::now().timestamp() - (self.config.recent_performance_days as i64 * 24 * 3600);
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_recent_cutoff`

warning: unused variable: `wins`
   --> src/intelligence/performance_tracker.rs:500:17
    |
500 |             let wins: i64 = performer.try_get("wins").unwrap_or(0);
    |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_wins`

warning: use of deprecated method `chrono::DateTime::<Tz>::timestamp_nanos`: use `timestamp_nanos_opt()` instead
   --> src/core/dex_types.rs:155:85
    |
155 |                 format!("liquidity_changed_{}_{}", pool_address, chrono::Utc::now().timestamp_nanos())
    |                                                                                     ^^^^^^^^^^^^^^^

warning: use of deprecated method `chrono::DateTime::<Tz>::timestamp_nanos`: use `timestamp_nanos_opt()` instead
   --> src/core/dex_types.rs:243:69
    |
243 |                 format!("buy_{}_{}", token_mint, chrono::Utc::now().timestamp_nanos())
    |                                                                     ^^^^^^^^^^^^^^^

warning: use of deprecated method `chrono::DateTime::<Tz>::timestamp_nanos`: use `timestamp_nanos_opt()` instead
   --> src/core/dex_types.rs:246:70
    |
246 |                 format!("sell_{}_{}", token_mint, chrono::Utc::now().timestamp_nanos())
    |                                                                      ^^^^^^^^^^^^^^^

warning: use of deprecated method `chrono::DateTime::<Tz>::timestamp_nanos`: use `timestamp_nanos_opt()` instead
   --> src/core/dex_types.rs:249:70
    |
249 |                 format!("swap_{}_{}", token_mint, chrono::Utc::now().timestamp_nanos())
    |                                                                      ^^^^^^^^^^^^^^^

warning: unused import: `Row`
 --> src/database/models.rs:2:12
  |
2 | use sqlx::{Row, FromRow, SqlitePool};
  |            ^^^

warning: unused import: `TimeZone`
 --> src/database/cleanup.rs:6:29
  |
6 | use chrono::{DateTime, Utc, TimeZone};
  |                             ^^^^^^^^

warning: unused variable: `subscription_id`
  --> src/ingest/dex_parsers.rs:16:33
   |
16 |     pub fn parse_program_update(subscription_id: u64, data: &Value) -> Result<Vec<MarketEvent>> {
   |                                 ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_subscription_id`

warning: unused variable: `slot`
   --> src/ingest/dex_parsers.rs:163:81
    |
163 |     fn parse_orca_event(account: &serde_json::Map<String, Value>, pubkey: &str, slot: u64) -> Result<Vec<MarketEvent>> {
    |                                                                                 ^^^^ help: if this is intentional, prefix it with an underscore: `_slot`

warning: variable does not need to be mutable
   --> src/ingest/dex_parsers.rs:164:13
    |
164 |         let mut events = Vec::new();
    |             ----^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `instruction_data`
   --> src/ingest/dex_parsers.rs:338:31
    |
338 |     pub fn parse_raydium_swap(instruction_data: &[u8]) -> Result<SwapEvent> {
    |                               ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_instruction_data`

warning: unused variable: `instruction_data`
   --> src/ingest/dex_parsers.rs:345:31
    |
345 |     pub fn parse_jupiter_swap(instruction_data: &[u8]) -> Result<SwapEvent> {
    |                               ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_instruction_data`

warning: associated function `extract_wallet_from_context` is never used
   --> src/ingest/dex_parsers.rs:382:8
    |
351 | impl DexEventParser {
    | ------------------- associated function in this implementation
...
382 |     fn extract_wallet_from_context(account: &serde_json::Map<String, Value>) -> Option<String> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: field `routing_rules` is never read
  --> src/transport/routing.rs:20:5
   |
17 | pub struct ServiceRegistry {
   |            --------------- field in this struct
...
20 |     routing_rules: Arc<RwLock<Vec<RoutingRule>>>,
   |     ^^^^^^^^^^^^^
   |
   = note: `ServiceRegistry` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `batch_size` and `batch_timeout` are never read
  --> src/database/services.rs:20:5
   |
16 | pub struct PersistenceService {
   |            ------------------ fields in this struct
...
20 |     batch_size: usize,
   |     ^^^^^^^^^^
21 |     batch_timeout: Duration,
   |     ^^^^^^^^^^^^^

warning: field `db` is never read
   --> src/database/services.rs:271:5
    |
270 | pub struct WalletTrackerService {
    |            -------------------- field in this struct
271 |     db: Arc<BadgerDatabase>,
    |     ^^

warning: field `position_tracker` is never read
  --> src/database/analytics/pnl_calculator.rs:58:5
   |
56 | pub struct PnLCalculator {
   |            ------------- field in this struct
57 |     db: Arc<BadgerDatabase>,
58 |     position_tracker: Arc<PositionTracker>,
   |     ^^^^^^^^^^^^^^^^

warning: fields `position_tracker` and `pnl_calculator` are never read
  --> src/database/analytics/performance_tracker.rs:75:5
   |
73 | pub struct PerformanceTracker {
   |            ------------------ fields in this struct
74 |     db: Arc<BadgerDatabase>,
75 |     position_tracker: Arc<PositionTracker>,
   |     ^^^^^^^^^^^^^^^^
76 |     pnl_calculator: Arc<PnLCalculator>,
   |     ^^^^^^^^^^^^^^

warning: field `background_receiver` is never read
  --> src/intelligence/mod.rs:59:5
   |
38 | pub struct WalletIntelligenceEngine {
   |            ------------------------ field in this struct
...
59 |     background_receiver: Arc<tokio::sync::Mutex<mpsc::UnboundedReceiver<BackgroundUpdate>>>,
   |     ^^^^^^^^^^^^^^^^^^^

warning: field `mmap` is never read
  --> src/intelligence/mmap_db.rs:72:5
   |
70 | pub struct UltraFastWalletDB {
   |            ----------------- field in this struct
71 |     // Memory mapping
72 |     mmap: MmapMut,
   |     ^^^^

warning: hiding a lifetime that's elided elsewhere is confusing
   --> src/database/models.rs:368:36
    |
368 |     pub async fn begin_transaction(&self) -> Result<sqlx::Transaction<sqlx::Sqlite>, super::DatabaseError> {
    |                                    ^^^^^            ------------------------------- the same lifetime is hidden here
    |                                    |
    |                                    the lifetime is elided here
    |
    = help: the same lifetime is referred to in inconsistent ways, making the signature confusing
    = note: `#[warn(mismatched_lifetime_syntaxes)]` on by default
help: use `'_` for type paths
    |
368 |     pub async fn begin_transaction(&self) -> Result<sqlx::Transaction<'_, sqlx::Sqlite>, super::DatabaseError> {
    |                                                                       +++

warning: `badger` (lib) generated 82 warnings (run `cargo fix --lib -p badger` to apply 47 suggestions)
warning: unused import: `WalletType`
  --> src/main.rs:12:95
   |
12 | use badger::core::{MarketEvent, TradingSignal, DexType, WalletManager, WalletProvisionConfig, WalletType};
   |                                                                                               ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `confidence`
   --> src/main.rs:288:42
    |
288 |         TradingSignal::Buy { token_mint, confidence, max_amount_sol, .. } => {
    |                                          ^^^^^^^^^^-
    |                                          |
    |                                          help: try removing the field
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `session_id`
   --> src/main.rs:799:17
    |
799 |             let session_id = match performance_tracker.start_trading_session().await {
    |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_session_id`

warning: unused variable: `performance_tracker`
   --> src/main.rs:890:13
    |
890 |         let performance_tracker = self.performance_tracker.clone();
    |             ^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_performance_tracker`

warning: value assigned to `client_handle` is never read
    --> src/main.rs:1107:25
     |
1107 |                         client_handle = None;
     |                         ^^^^^^^^^^^^^
     |
     = help: maybe it is overwritten before being read?
     = note: `#[warn(unused_assignments)]` on by default

warning: function `parse_and_display_program_update` is never used
  --> src/main.rs:78:4
   |
78 | fn parse_and_display_program_update(subscription_id: u64, data: &serde_json::Value) {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: `badger` (bin "badger") generated 6 warnings (run `cargo fix --bin "badger"` to apply 2 suggestions)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 8.17s
     Running `target/debug/badger`
[2m2025-08-31T04:35:57.728197Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m 🦡 Badger Trading Bot - Phase 4 Wallet Intelligence & Copy Trading
[2m2025-08-31T04:35:57.728443Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m ==============================================================
[2m2025-08-31T04:35:57.728452Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m Version: 0.4.0-phase4
[2m2025-08-31T04:35:57.728459Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m Phase 4 Features:
[2m2025-08-31T04:35:57.728466Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m   🔥 Real-time Raydium AMM pool monitoring
[2m2025-08-31T04:35:57.728473Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m   ⚡ Jupiter V6 aggregator event tracking
[2m2025-08-31T04:35:57.728479Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m   🌊 Orca Whirlpool program monitoring
[2m2025-08-31T04:35:57.728485Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m   🪙 SPL Token new mint detection
[2m2025-08-31T04:35:57.728491Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m   🚀 Pump.fun meme coin launch tracking
[2m2025-08-31T04:35:57.728497Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m   🎯 Advanced trading signal generation
[2m2025-08-31T04:35:57.728514Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m   🗄️ Persistent event storage and analytics
[2m2025-08-31T04:35:57.728520Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m   📊 Real-time performance tracking
[2m2025-08-31T04:35:57.728526Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m   🕵️ Wallet intelligence and insider scoring
[2m2025-08-31T04:35:57.728531Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m   🧠 Nanosecond-speed insider copy trading
[2m2025-08-31T04:35:57.728537Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m   ⚡ Ultra-fast decision making with memory cache
[2m2025-08-31T04:35:57.728543Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m   🎯 Automated position sizing and signal generation
[2m2025-08-31T04:35:57.728562Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m   🔍 High-performance data queries
[2m2025-08-31T04:35:57.728567Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m Performance: Nanosecond decisions + comprehensive intelligence tracking
[2m2025-08-31T04:35:57.728920Z[0m [34mDEBUG[0m ThreadId(01) [1mnew[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m Initializing EnhancedTransportBus with production channel sizes
[2m2025-08-31T04:35:57.739532Z[0m [34mDEBUG[0m ThreadId(01) [1mnew[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m EnhancedTransportBus initialized successfully
[2m2025-08-31T04:35:57.739727Z[0m [34mDEBUG[0m ThreadId(01) [1mnew[0m: [2mbadger::transport::routing[0m[2m:[0m Creating new ServiceRegistry [2m[3mtransport[0m[2m=[0mEnhancedTransportBus { market_events: broadcast::Sender, trading_signals: broadcast::Sender, wallet_events: broadcast::Sender, system_alerts: broadcast::Sender, stats: RwLock { data: BusStatistics { market_events_sent: 0, trading_signals_sent: 0, wallet_events_sent: 0, system_alerts_sent: 0, market_subscribers: 0, signal_subscribers: 0, wallet_subscribers: 0, alert_subscribers: 0 } } }[0m
[2m2025-08-31T04:35:57.739883Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m 🚀 Starting all Badger services with Enhanced Transport Layer + Phase 3 Database
[2m2025-08-31T04:35:57.739917Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m 🏦 Initializing Wallet Management System
[2m2025-08-31T04:35:57.746523Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m 🔐 Loaded existing encryption salt
[2m2025-08-31T04:35:57.746596Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m 🏦 Initializing Wallet Management System
[2m2025-08-31T04:35:57.746617Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m 📖 Loading existing wallet configurations
[2m2025-08-31T04:35:57.746664Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m 🔐 Existing wallets found, generating master password for decryption
[2m2025-08-31T04:35:57.746819Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m 🔐 Loaded existing master password from file
[2m2025-08-31T04:35:57.747296Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m ✅ Loaded Trading wallet: DQeCo2gWNhM3eSetZ7vwTj33UurMFB9PPNHCjaNyFR7n
[2m2025-08-31T04:35:57.747651Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m ✅ Loaded Cold wallet: AmXNkfff9X3JfbkWY6Z8ZceWMCGd6s84s6W82GEJHboJ
[2m2025-08-31T04:35:57.747726Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m ✅ All required wallets are present
[2m2025-08-31T04:35:57.747736Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m 🔍 Validating wallet configurations
[2m2025-08-31T04:35:57.747844Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m ✅ Validated Trading wallet: DQeCo2gWNhM3eSetZ7vwTj33UurMFB9PPNHCjaNyFR7n
[2m2025-08-31T04:35:57.747890Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m ✅ Validated Cold wallet: AmXNkfff9X3JfbkWY6Z8ZceWMCGd6s84s6W82GEJHboJ
[2m2025-08-31T04:35:57.747897Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m 💰 Updating wallet balances
[2m2025-08-31T04:35:58.592978Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m 💳 Trading wallet balance: 0.000000 SOL
[2m2025-08-31T04:35:58.734747Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m 💳 Cold wallet balance: 0.000000 SOL
[2m2025-08-31T04:35:58.734807Z[0m [32m INFO[0m ThreadId(01) [2mbadger::core::wallet_management[0m[2m:[0m 🎯 Wallet Management System initialized successfully

🏦 ═══════════════════════════════════════════════════════
🏦 BADGER WALLET MANAGEMENT SYSTEM - SUMMARY
🏦 ═══════════════════════════════════════════════════════
📱 Trading Wallet:
   Address: DQeCo2gWNhM3eSetZ7vwTj33UurMFB9PPNHCjaNyFR7n
   Alias: Trading Wallet
   Balance: 0.000000 SOL
   Status: 🟢 ACTIVE
   Created: 2025-08-31 02:12:06 UTC
   🔍 Explorer Links:
      Solscan:        https://solscan.io/account/DQeCo2gWNhM3eSetZ7vwTj33UurMFB9PPNHCjaNyFR7n
      Solana Explorer: https://explorer.solana.com/address/DQeCo2gWNhM3eSetZ7vwTj33UurMFB9PPNHCjaNyFR7n
      SolanaFM:       https://solana.fm/address/DQeCo2gWNhM3eSetZ7vwTj33UurMFB9PPNHCjaNyFR7n
      XRAY:           https://xray.helius.xyz/account/DQeCo2gWNhM3eSetZ7vwTj33UurMFB9PPNHCjaNyFR7n

📱 Cold Wallet:
   Address: AmXNkfff9X3JfbkWY6Z8ZceWMCGd6s84s6W82GEJHboJ
   Alias: Cold Storage
   Balance: 0.000000 SOL
   Status: 🟢 ACTIVE
   Created: 2025-08-31 02:12:06 UTC
   🔍 Explorer Links:
      Solscan:        https://solscan.io/account/AmXNkfff9X3JfbkWY6Z8ZceWMCGd6s84s6W82GEJHboJ
      Solana Explorer: https://explorer.solana.com/address/AmXNkfff9X3JfbkWY6Z8ZceWMCGd6s84s6W82GEJHboJ
      SolanaFM:       https://solana.fm/address/AmXNkfff9X3JfbkWY6Z8ZceWMCGd6s84s6W82GEJHboJ
      XRAY:           https://xray.helius.xyz/account/AmXNkfff9X3JfbkWY6Z8ZceWMCGd6s84s6W82GEJHboJ

🏦 ═══════════════════════════════════════════════════════

[2m2025-08-31T04:35:58.735120Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m ✅ Wallet Management System initialized successfully
[2m2025-08-31T04:35:58.735149Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m 🔄 Starting Transport Monitoring Service
[2m2025-08-31T04:35:58.735304Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m ⏳ Waiting for monitoring service subscriptions to complete...
[2m2025-08-31T04:35:58.735527Z[0m [32m INFO[0m ThreadId(09) [2mbadger[0m[2m:[0m 🚀 Transport Monitor - Subscribing to all event channels
[2m2025-08-31T04:35:58.735691Z[0m [34mDEBUG[0m ThreadId(09) [1msubscribe_market_events[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m New market event subscriber added [3mtotal_subscribers[0m[2m=[0m1
[2m2025-08-31T04:35:58.735773Z[0m [34mDEBUG[0m ThreadId(09) [1msubscribe_trading_signals[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m New trading signal subscriber added [3mtotal_subscribers[0m[2m=[0m1
[2m2025-08-31T04:35:58.735806Z[0m [34mDEBUG[0m ThreadId(09) [1msubscribe_wallet_events[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m New wallet event subscriber added [3mtotal_subscribers[0m[2m=[0m1
[2m2025-08-31T04:35:58.735836Z[0m [34mDEBUG[0m ThreadId(09) [1msubscribe_system_alerts[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m New system alert subscriber added [3mtotal_subscribers[0m[2m=[0m1
[2m2025-08-31T04:35:58.735858Z[0m [32m INFO[0m ThreadId(09) [2mbadger[0m[2m:[0m 📊 Transport Monitor subscriptions complete - signaling ready
[2m2025-08-31T04:35:58.735892Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m ✅ Monitoring service subscriptions ready
[2m2025-08-31T04:35:58.735957Z[0m [34mDEBUG[0m ThreadId(01) [1mregister_service[0m: [2mbadger::transport::routing[0m[2m:[0m Registering service: Transport Layer Monitor (transport-monitor-001) [2m[3mservice_info[0m[2m=[0mServiceInfo { id: "transport-monitor-001", name: "Transport Layer Monitor", service_type: Utility, version: "1.0.0", capabilities: [MarketEventConsumer, TradingSignalConsumer], subscriptions: [SubscriptionInfo { event_type: MarketEvent, filters: [], subscribed_at: 2025-08-31T04:35:58.735906Z }, SubscriptionInfo { event_type: TradingSignal, filters: [], subscribed_at: 2025-08-31T04:35:58.735906Z }], status: Starting, registered_at: 2025-08-31T04:35:58.735906Z, last_heartbeat: 2025-08-31T04:35:58.735906Z, metadata: {} } [3mservice_id[0m[2m=[0mtransport-monitor-001[0m
[2m2025-08-31T04:35:58.736023Z[0m [33m WARN[0m ThreadId(09) [2mbadger[0m[2m:[0m Failed to update monitor service status: Service not found: transport-monitor-001
[2m2025-08-31T04:35:58.736036Z[0m [32m INFO[0m ThreadId(09) [2mbadger[0m[2m:[0m 📊 Transport Monitor active - listening for events
🎧 TRANSPORT MONITOR: Ready to receive events on all channels
[2m2025-08-31T04:35:58.736116Z[0m [34mDEBUG[0m ThreadId(01) [1mregister_service[0m:[1mpublish_system_alert[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m Published system alert [3msubscriber_count[0m[2m=[0m1 [3mtotal_sent[0m[2m=[0m1 [2m[3mservice_info[0m[2m=[0mServiceInfo { id: "transport-monitor-001", name: "Transport Layer Monitor", service_type: Utility, version: "1.0.0", capabilities: [MarketEventConsumer, TradingSignalConsumer], subscriptions: [SubscriptionInfo { event_type: MarketEvent, filters: [], subscribed_at: 2025-08-31T04:35:58.735906Z }, SubscriptionInfo { event_type: TradingSignal, filters: [], subscribed_at: 2025-08-31T04:35:58.735906Z }], status: Starting, registered_at: 2025-08-31T04:35:58.735906Z, last_heartbeat: 2025-08-31T04:35:58.735906Z, metadata: {} } [3mservice_id[0m[2m=[0mtransport-monitor-001[0m [2m[3malert_type[0m[2m=[0mDiscriminant(5)[0m
🚨 TRANSPORT BUS - SystemAlert received:
[2m2025-08-31T04:35:58.736153Z[0m [34mDEBUG[0m ThreadId(01) [1mregister_service[0m: [2mbadger::transport::routing[0m[2m:[0m Service registered successfully: transport-monitor-001 [2m[3mservice_info[0m[2m=[0mServiceInfo { id: "transport-monitor-001", name: "Transport Layer Monitor", service_type: Utility, version: "1.0.0", capabilities: [MarketEventConsumer, TradingSignalConsumer], subscriptions: [SubscriptionInfo { event_type: MarketEvent, filters: [], subscribed_at: 2025-08-31T04:35:58.735906Z }, SubscriptionInfo { event_type: TradingSignal, filters: [], subscribed_at: 2025-08-31T04:35:58.735906Z }], status: Starting, registered_at: 2025-08-31T04:35:58.735906Z, last_heartbeat: 2025-08-31T04:35:58.735906Z, metadata: {} } [3mservice_id[0m[2m=[0mtransport-monitor-001[0m
[2m2025-08-31T04:35:58.736166Z[0m [32m INFO[0m ThreadId(09) [2mbadger[0m[2m:[0m 🚨 TRANSPORT BUS - SystemAlert received:
  🟢 Service Started: Transport Layer Monitor v1.0.0
[2m2025-08-31T04:35:58.736194Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m ✅ Transport monitoring service started and registered
[2m2025-08-31T04:35:58.736205Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m 🗄️ Initializing Phase 3 Database Services
[2m2025-08-31T04:35:58.736214Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database[0m[2m:[0m 🗄️ Initializing Database Manager for Phase 3
[2m2025-08-31T04:35:58.740344Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::models[0m[2m:[0m 🔄 Skipping old model-based migrations (using migration files)
[2m2025-08-31T04:35:58.740357Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::models[0m[2m:[0m ✅ Model initialization completed successfully
[2m2025-08-31T04:35:58.740365Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::models[0m[2m:[0m ✅ BadgerDatabase connected to: sqlite:data/badger.db
[2m2025-08-31T04:35:58.740452Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database[0m[2m:[0m ✅ Database Manager initialized successfully
[2m2025-08-31T04:35:58.740462Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m 🔄 Running database migrations...
[2m2025-08-31T04:35:58.740484Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m 🔄 Starting database migration system
[2m2025-08-31T04:35:58.740983Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m 📊 Migration tracking table created/verified
[2m2025-08-31T04:35:58.741352Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m 📁 Found 1 migration files
[2m2025-08-31T04:35:58.741627Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ 0 migrations already applied
[2m2025-08-31T04:35:58.741648Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m 🔄 Applying migration: 001 - initial schema
[2m2025-08-31T04:35:58.741920Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Parsed 48 SQL statements from migration
[2m2025-08-31T04:35:58.741930Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m 📋 First statement: 292 chars
[2m2025-08-31T04:35:58.741938Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m First 150 chars: CREATE TABLE IF NOT EXISTS market_events ( id INTEGER PRIMARY KEY AUTOINCREMENT, event_id TEXT UNIQUE NOT NULL, event_type TEXT NOT NULL, timestamp IN
[2m2025-08-31T04:35:58.741946Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 1/48: 292 chars
[2m2025-08-31T04:35:58.742252Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 1/48 executed successfully
[2m2025-08-31T04:35:58.742263Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 2/48: 355 chars
[2m2025-08-31T04:35:58.742640Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 2/48 executed successfully
[2m2025-08-31T04:35:58.742650Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 3/48: 202 chars
[2m2025-08-31T04:35:58.742954Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 3/48 executed successfully
[2m2025-08-31T04:35:58.742963Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 4/48: 694 chars
[2m2025-08-31T04:35:58.743346Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 4/48 executed successfully
[2m2025-08-31T04:35:58.743355Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 5/48: 422 chars
[2m2025-08-31T04:35:58.743686Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 5/48 executed successfully
[2m2025-08-31T04:35:58.743695Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 6/48: 275 chars
[2m2025-08-31T04:35:58.744012Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 6/48 executed successfully
[2m2025-08-31T04:35:58.744021Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 7/48: 478 chars
[2m2025-08-31T04:35:58.744380Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 7/48 executed successfully
[2m2025-08-31T04:35:58.744399Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 8/48: 450 chars
[2m2025-08-31T04:35:58.744855Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 8/48 executed successfully
[2m2025-08-31T04:35:58.744867Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 9/48: 499 chars
[2m2025-08-31T04:35:58.745337Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 9/48 executed successfully
[2m2025-08-31T04:35:58.745347Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 10/48: 276 chars
[2m2025-08-31T04:35:58.745758Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 10/48 executed successfully
[2m2025-08-31T04:35:58.745770Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 11/48: 497 chars
[2m2025-08-31T04:35:58.745784Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m === DEBUG STATEMENT 11 ===
[2m2025-08-31T04:35:58.745791Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m SQL: CREATE TABLE IF NOT EXISTS wallet_scores ( id INTEGER PRIMARY KEY AUTOINCREMENT, wallet_address TEXT UNIQUE NOT NULL, insider_score REAL NOT NULL DEFAULT 0.0, risk_score REAL NOT NULL DEFAULT 0.0, consistency_score REAL NOT NULL DEFAULT 0.0, volume_score REAL NOT NULL DEFAULT 0.0, recent_performance REAL NOT NULL DEFAULT 0.0, total_trades INTEGER NOT NULL DEFAULT 0, win_rate REAL NOT NULL DEFAULT 0.0, avg_profit REAL NOT NULL DEFAULT 0.0, last_updated INTEGER DEFAULT (strftime('%s', 'now')) )
[2m2025-08-31T04:35:58.745798Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ========================
[2m2025-08-31T04:35:58.746291Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 11/48 executed successfully
[2m2025-08-31T04:35:58.746302Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m === CHECKING wallet_scores TABLE AFTER CREATION ===
[2m2025-08-31T04:35:58.746663Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m wallet_scores schema: CREATE TABLE wallet_scores ( id INTEGER PRIMARY KEY AUTOINCREMENT, wallet_address TEXT UNIQUE NOT NULL, insider_score REAL NOT NULL DEFAULT 0.0, risk_score REAL NOT NULL DEFAULT 0.0, consistency_score REAL NOT NULL DEFAULT 0.0, volume_score REAL NOT NULL DEFAULT 0.0, recent_performance REAL NOT NULL DEFAULT 0.0, total_trades INTEGER NOT NULL DEFAULT 0, win_rate REAL NOT NULL DEFAULT 0.0, avg_profit REAL NOT NULL DEFAULT 0.0, last_updated INTEGER DEFAULT (strftime('%s', 'now')) )
[2m2025-08-31T04:35:58.746675Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ win_rate column confirmed in schema
[2m2025-08-31T04:35:58.746683Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 12/48: 351 chars
[2m2025-08-31T04:35:58.746904Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 12/48 executed successfully
[2m2025-08-31T04:35:58.746914Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 13/48: 406 chars
[2m2025-08-31T04:35:58.747515Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 13/48 executed successfully
[2m2025-08-31T04:35:58.747524Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 14/48: 338 chars
[2m2025-08-31T04:35:58.748045Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 14/48 executed successfully
[2m2025-08-31T04:35:58.748058Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 15/48: 325 chars
[2m2025-08-31T04:35:58.748575Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 15/48 executed successfully
[2m2025-08-31T04:35:58.748585Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 16/48: 82 chars
[2m2025-08-31T04:35:58.749061Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 16/48 executed successfully
[2m2025-08-31T04:35:58.749070Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 17/48: 84 chars
[2m2025-08-31T04:35:58.749560Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 17/48 executed successfully
[2m2025-08-31T04:35:58.749571Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 18/48: 72 chars
[2m2025-08-31T04:35:58.750057Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 18/48 executed successfully
[2m2025-08-31T04:35:58.750067Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 19/48: 86 chars
[2m2025-08-31T04:35:58.750573Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 19/48 executed successfully
[2m2025-08-31T04:35:58.750582Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 20/48: 88 chars
[2m2025-08-31T04:35:58.751079Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 20/48 executed successfully
[2m2025-08-31T04:35:58.751088Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 21/48: 90 chars
[2m2025-08-31T04:35:58.751570Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 21/48 executed successfully
[2m2025-08-31T04:35:58.751579Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 22/48: 86 chars
[2m2025-08-31T04:35:58.752044Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 22/48 executed successfully
[2m2025-08-31T04:35:58.752053Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 23/48: 98 chars
[2m2025-08-31T04:35:58.752526Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 23/48 executed successfully
[2m2025-08-31T04:35:58.752534Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 24/48: 82 chars
[2m2025-08-31T04:35:58.753004Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 24/48 executed successfully
[2m2025-08-31T04:35:58.753013Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 25/48: 105 chars
[2m2025-08-31T04:35:58.753485Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 25/48 executed successfully
[2m2025-08-31T04:35:58.753493Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 26/48: 80 chars
[2m2025-08-31T04:35:58.753990Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 26/48 executed successfully
[2m2025-08-31T04:35:58.753999Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 27/48: 103 chars
[2m2025-08-31T04:35:58.754490Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 27/48 executed successfully
[2m2025-08-31T04:35:58.754499Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 28/48: 100 chars
[2m2025-08-31T04:35:58.755059Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 28/48 executed successfully
[2m2025-08-31T04:35:58.755070Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 29/48: 95 chars
[2m2025-08-31T04:35:58.755559Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 29/48 executed successfully
[2m2025-08-31T04:35:58.755569Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 30/48: 103 chars
[2m2025-08-31T04:35:58.756033Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 30/48 executed successfully
[2m2025-08-31T04:35:58.756041Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 31/48: 108 chars
[2m2025-08-31T04:35:58.756516Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 31/48 executed successfully
[2m2025-08-31T04:35:58.756525Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 32/48: 99 chars
[2m2025-08-31T04:35:58.756982Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 32/48 executed successfully
[2m2025-08-31T04:35:58.756990Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 33/48: 93 chars
[2m2025-08-31T04:35:58.757475Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 33/48 executed successfully
[2m2025-08-31T04:35:58.757484Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 34/48: 108 chars
[2m2025-08-31T04:35:58.757962Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 34/48 executed successfully
[2m2025-08-31T04:35:58.757970Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 35/48: 100 chars
[2m2025-08-31T04:35:58.758480Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 35/48 executed successfully
[2m2025-08-31T04:35:58.758489Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 36/48: 107 chars
[2m2025-08-31T04:35:58.758957Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 36/48 executed successfully
[2m2025-08-31T04:35:58.758965Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 37/48: 98 chars
[2m2025-08-31T04:35:58.759436Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 37/48 executed successfully
[2m2025-08-31T04:35:58.759445Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 38/48: 108 chars
[2m2025-08-31T04:35:58.759925Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 38/48 executed successfully
[2m2025-08-31T04:35:58.759933Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 39/48: 76 chars
[2m2025-08-31T04:35:58.760419Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 39/48 executed successfully
[2m2025-08-31T04:35:58.760427Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 40/48: 68 chars
[2m2025-08-31T04:35:58.760908Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 40/48 executed successfully
[2m2025-08-31T04:35:58.760916Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 41/48: 84 chars
[2m2025-08-31T04:35:58.761418Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 41/48 executed successfully
[2m2025-08-31T04:35:58.761426Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 42/48: 91 chars
[2m2025-08-31T04:35:58.761934Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 42/48 executed successfully
[2m2025-08-31T04:35:58.761942Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 43/48: 67 chars
[2m2025-08-31T04:35:58.762412Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 43/48 executed successfully
[2m2025-08-31T04:35:58.762420Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 44/48: 95 chars
[2m2025-08-31T04:35:58.762924Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 44/48 executed successfully
[2m2025-08-31T04:35:58.762932Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 45/48: 85 chars
[2m2025-08-31T04:35:58.762937Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m === DEBUG STATEMENT 45 ===
[2m2025-08-31T04:35:58.762942Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m SQL: CREATE INDEX IF NOT EXISTS idx_wallet_scores_win_rate ON wallet_scores(win_rate DESC)
[2m2025-08-31T04:35:58.762948Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ========================
[2m2025-08-31T04:35:58.763420Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 45/48 executed successfully
[2m2025-08-31T04:35:58.763428Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 46/48: 93 chars
[2m2025-08-31T04:35:58.763937Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 46/48 executed successfully
[2m2025-08-31T04:35:58.763945Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 47/48: 112 chars
[2m2025-08-31T04:35:58.764485Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 47/48 executed successfully
[2m2025-08-31T04:35:58.764493Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m Executing migration statement 48/48: 51 chars
[2m2025-08-31T04:35:58.764985Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration statement 48/48 executed successfully
[2m2025-08-31T04:35:58.765117Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Migration 001 applied successfully
[2m2025-08-31T04:35:58.765129Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Applied 1 new migrations successfully
[2m2025-08-31T04:35:58.765137Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m 🔍 Verifying database schema integrity
[2m2025-08-31T04:35:58.766652Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database::migrations[0m[2m:[0m ✅ Database schema verification completed
[2m2025-08-31T04:35:58.766832Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m 📊 Migration status: ✅ Database is up to date (1 migrations applied)
[2m2025-08-31T04:35:58.766854Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m 🔄 Initializing database session...
[2m2025-08-31T04:35:58.766938Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m ✅ Database session initialized successfully
[2m2025-08-31T04:35:58.767019Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database[0m[2m:[0m 🚀 Enhanced database services started:
[2m2025-08-31T04:35:58.767029Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database[0m[2m:[0m    ⚡ Batch Processing: Active
[2m2025-08-31T04:35:58.767036Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database[0m[2m:[0m    🔍 Data Validation: Strict Mode
[2m2025-08-31T04:35:58.767042Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database[0m[2m:[0m    🧹 Cleanup Service: 7d/30d/90d/365d retention
[2m2025-08-31T04:35:58.767047Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database[0m[2m:[0m    📊 Analytics Engine: Active
[2m2025-08-31T04:35:58.767053Z[0m [32m INFO[0m ThreadId(01) [2mbadger::database[0m[2m:[0m    🕵️ Wallet Tracker: Active
[2m2025-08-31T04:35:58.767100Z[0m [32m INFO[0m ThreadId(08) [1mrun[0m: [2mbadger::database::batch[0m[2m:[0m 🚀 Enhanced Persistence Service starting with batching
[2m2025-08-31T04:35:58.767107Z[0m [32m INFO[0m ThreadId(05) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m 🗄️ PersistenceService starting - database storage active
[2m2025-08-31T04:35:58.767111Z[0m [32m INFO[0m ThreadId(06) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m 📊 AnalyticsService starting - real-time analytics engine active
[2m2025-08-31T04:35:58.767153Z[0m [34mDEBUG[0m ThreadId(05) [1mrun[0m:[1mregister_service[0m: [2mbadger::transport::routing[0m[2m:[0m Registering service: Database Persistence Service (persistence-service-001) [2m[3mservice_info[0m[2m=[0mServiceInfo { id: "persistence-service-001", name: "Database Persistence Service", service_type: Storage, version: "1.0.0", capabilities: [MarketEventConsumer, TradingSignalConsumer], subscriptions: [SubscriptionInfo { event_type: MarketEvent, filters: [], subscribed_at: 2025-08-31T04:35:58.767130Z }, SubscriptionInfo { event_type: TradingSignal, filters: [], subscribed_at: 2025-08-31T04:35:58.767132Z }], status: Starting, registered_at: 2025-08-31T04:35:58.767133Z, last_heartbeat: 2025-08-31T04:35:58.767133Z, metadata: {} } [3mservice_id[0m[2m=[0mpersistence-service-001[0m
[2m2025-08-31T04:35:58.767098Z[0m [32m INFO[0m ThreadId(09) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m 🧹 Cleanup Service starting with retention policy:
[2m2025-08-31T04:35:58.767180Z[0m [32m INFO[0m ThreadId(09) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m    📊 Hot data: 7 days
[2m2025-08-31T04:35:58.767188Z[0m [32m INFO[0m ThreadId(04) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m 🕵️ WalletTrackerService starting - wallet intelligence active
[2m2025-08-31T04:35:58.767202Z[0m [34mDEBUG[0m ThreadId(05) [1mrun[0m:[1mregister_service[0m:[1mpublish_system_alert[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m Published system alert [3msubscriber_count[0m[2m=[0m1 [3mtotal_sent[0m[2m=[0m2 [2m[3mservice_info[0m[2m=[0mServiceInfo { id: "persistence-service-001", name: "Database Persistence Service", service_type: Storage, version: "1.0.0", capabilities: [MarketEventConsumer, TradingSignalConsumer], subscriptions: [SubscriptionInfo { event_type: MarketEvent, filters: [], subscribed_at: 2025-08-31T04:35:58.767130Z }, SubscriptionInfo { event_type: TradingSignal, filters: [], subscribed_at: 2025-08-31T04:35:58.767132Z }], status: Starting, registered_at: 2025-08-31T04:35:58.767133Z, last_heartbeat: 2025-08-31T04:35:58.767133Z, metadata: {} } [3mservice_id[0m[2m=[0mpersistence-service-001[0m [2m[3malert_type[0m[2m=[0mDiscriminant(5)[0m
[2m2025-08-31T04:35:58.767214Z[0m [32m INFO[0m ThreadId(02) [2mbadger::database::batch[0m[2m:[0m 📦 Market events batch processor started
[2m2025-08-31T04:35:58.767214Z[0m [34mDEBUG[0m ThreadId(04) [1mrun[0m:[1mregister_service[0m: [2mbadger::transport::routing[0m[2m:[0m Registering service: Wallet Intelligence Service (wallet-tracker-service-001) [2m[3mservice_info[0m[2m=[0mServiceInfo { id: "wallet-tracker-service-001", name: "Wallet Intelligence Service", service_type: Analytics, version: "1.0.0", capabilities: [WalletEventProducer, MarketEventConsumer], subscriptions: [SubscriptionInfo { event_type: MarketEvent, filters: [], subscribed_at: 2025-08-31T04:35:58.767203Z }], status: Starting, registered_at: 2025-08-31T04:35:58.767203Z, last_heartbeat: 2025-08-31T04:35:58.767204Z, metadata: {} } [3mservice_id[0m[2m=[0mwallet-tracker-service-001[0m
[2m2025-08-31T04:35:58.767213Z[0m [32m INFO[0m ThreadId(08) [2mbadger::database::batch[0m[2m:[0m 📦 Trading signals batch processor started
[2m2025-08-31T04:35:58.767193Z[0m [32m INFO[0m ThreadId(09) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m    🔥 Warm data: 30 days
[2m2025-08-31T04:35:58.767123Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m ✅ Phase 3 Database Services initialized successfully
[2m2025-08-31T04:35:58.767247Z[0m [32m INFO[0m ThreadId(09) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m    ❄️  Cold archive: 90 days
[2m2025-08-31T04:35:58.767154Z[0m [34mDEBUG[0m ThreadId(06) [1mrun[0m:[1mregister_service[0m: [2mbadger::transport::routing[0m[2m:[0m Registering service: Real-time Analytics Service (analytics-service-001) [2m[3mservice_info[0m[2m=[0mServiceInfo { id: "analytics-service-001", name: "Real-time Analytics Service", service_type: Analytics, version: "1.0.0", capabilities: [MarketEventConsumer, TradingSignalConsumer], subscriptions: [SubscriptionInfo { event_type: MarketEvent, filters: [], subscribed_at: 2025-08-31T04:35:58.767140Z }], status: Starting, registered_at: 2025-08-31T04:35:58.767140Z, last_heartbeat: 2025-08-31T04:35:58.767140Z, metadata: {} } [3mservice_id[0m[2m=[0manalytics-service-001[0m
[2m2025-08-31T04:35:58.767245Z[0m [34mDEBUG[0m ThreadId(04) [1mrun[0m:[1mregister_service[0m:[1mpublish_system_alert[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m Published system alert [3msubscriber_count[0m[2m=[0m1 [3mtotal_sent[0m[2m=[0m3 [2m[3mservice_info[0m[2m=[0mServiceInfo { id: "wallet-tracker-service-001", name: "Wallet Intelligence Service", service_type: Analytics, version: "1.0.0", capabilities: [WalletEventProducer, MarketEventConsumer], subscriptions: [SubscriptionInfo { event_type: MarketEvent, filters: [], subscribed_at: 2025-08-31T04:35:58.767203Z }], status: Starting, registered_at: 2025-08-31T04:35:58.767203Z, last_heartbeat: 2025-08-31T04:35:58.767204Z, metadata: {} } [3mservice_id[0m[2m=[0mwallet-tracker-service-001[0m [2m[3malert_type[0m[2m=[0mDiscriminant(5)[0m
[2m2025-08-31T04:35:58.767301Z[0m [34mDEBUG[0m ThreadId(04) [1mrun[0m:[1mregister_service[0m: [2mbadger::transport::routing[0m[2m:[0m Service registered successfully: wallet-tracker-service-001 [2m[3mservice_info[0m[2m=[0mServiceInfo { id: "wallet-tracker-service-001", name: "Wallet Intelligence Service", service_type: Analytics, version: "1.0.0", capabilities: [WalletEventProducer, MarketEventConsumer], subscriptions: [SubscriptionInfo { event_type: MarketEvent, filters: [], subscribed_at: 2025-08-31T04:35:58.767203Z }], status: Starting, registered_at: 2025-08-31T04:35:58.767203Z, last_heartbeat: 2025-08-31T04:35:58.767204Z, metadata: {} } [3mservice_id[0m[2m=[0mwallet-tracker-service-001[0m
[2m2025-08-31T04:35:58.767253Z[0m [32m INFO[0m ThreadId(01) [2mbadger[0m[2m:[0m 🔧 Initializing analytics components for real-time metrics
[2m2025-08-31T04:35:58.767260Z[0m [32m INFO[0m ThreadId(09) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m    🗑️  Delete after: 365 days
[2m2025-08-31T04:35:58.767230Z[0m [34mDEBUG[0m ThreadId(05) [1mrun[0m:[1mregister_service[0m: [2mbadger::transport::routing[0m[2m:[0m Service registered successfully: persistence-service-001 [2m[3mservice_info[0m[2m=[0mServiceInfo { id: "persistence-service-001", name: "Database Persistence Service", service_type: Storage, version: "1.0.0", capabilities: [MarketEventConsumer, TradingSignalConsumer], subscriptions: [SubscriptionInfo { event_type: MarketEvent, filters: [], subscribed_at: 2025-08-31T04:35:58.767130Z }, SubscriptionInfo { event_type: TradingSignal, filters: [], subscribed_at: 2025-08-31T04:35:58.767132Z }], status: Starting, registered_at: 2025-08-31T04:35:58.767133Z, last_heartbeat: 2025-08-31T04:35:58.767133Z, metadata: {} } [3mservice_id[0m[2m=[0mpersistence-service-001[0m
[2m2025-08-31T04:35:58.767347Z[0m [32m INFO[0m ThreadId(01) [1minitialize_schema[0m: [2mbadger::database::analytics::position_tracker[0m[2m:[0m 🔧 Initializing position tracker database schema
[2m2025-08-31T04:35:58.767303Z[0m [34mDEBUG[0m ThreadId(06) [1mrun[0m:[1mregister_service[0m:[1mpublish_system_alert[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m Published system alert [3msubscriber_count[0m[2m=[0m1 [3mtotal_sent[0m[2m=[0m4 [2m[3mservice_info[0m[2m=[0mServiceInfo { id: "analytics-service-001", name: "Real-time Analytics Service", service_type: Analytics, version: "1.0.0", capabilities: [MarketEventConsumer, TradingSignalConsumer], subscriptions: [SubscriptionInfo { event_type: MarketEvent, filters: [], subscribed_at: 2025-08-31T04:35:58.767140Z }], status: Starting, registered_at: 2025-08-31T04:35:58.767140Z, last_heartbeat: 2025-08-31T04:35:58.767140Z, metadata: {} } [3mservice_id[0m[2m=[0manalytics-service-001[0m [2m[3malert_type[0m[2m=[0mDiscriminant(5)[0m
🚨 TRANSPORT BUS - SystemAlert received:
[2m2025-08-31T04:35:58.767384Z[0m [32m INFO[0m ThreadId(05) [2mbadger[0m[2m:[0m 🚨 TRANSPORT BUS - SystemAlert received:
  🟢 Service Started: Database Persistence Service v1.0.0
[2m2025-08-31T04:35:58.767382Z[0m [34mDEBUG[0m ThreadId(06) [1mrun[0m:[1mregister_service[0m: [2mbadger::transport::routing[0m[2m:[0m Service registered successfully: analytics-service-001 [2m[3mservice_info[0m[2m=[0mServiceInfo { id: "analytics-service-001", name: "Real-time Analytics Service", service_type: Analytics, version: "1.0.0", capabilities: [MarketEventConsumer, TradingSignalConsumer], subscriptions: [SubscriptionInfo { event_type: MarketEvent, filters: [], subscribed_at: 2025-08-31T04:35:58.767140Z }], status: Starting, registered_at: 2025-08-31T04:35:58.767140Z, last_heartbeat: 2025-08-31T04:35:58.767140Z, metadata: {} } [3mservice_id[0m[2m=[0manalytics-service-001[0m
🚨 TRANSPORT BUS - SystemAlert received:
[2m2025-08-31T04:35:58.767410Z[0m [32m INFO[0m ThreadId(05) [2mbadger[0m[2m:[0m 🚨 TRANSPORT BUS - SystemAlert received:
  🟢 Service Started: Wallet Intelligence Service v1.0.0
🚨 TRANSPORT BUS - SystemAlert received:
[2m2025-08-31T04:35:58.767420Z[0m [34mDEBUG[0m ThreadId(06) [1mrun[0m:[1msubscribe_market_events[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m New market event subscriber added [3mtotal_subscribers[0m[2m=[0m4
[2m2025-08-31T04:35:58.767428Z[0m [32m INFO[0m ThreadId(05) [2mbadger[0m[2m:[0m 🚨 TRANSPORT BUS - SystemAlert received:
  🟢 Service Started: Real-time Analytics Service v1.0.0
[2m2025-08-31T04:35:58.767460Z[0m [32m INFO[0m ThreadId(06) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m 👁️ WalletTrackerService subscriptions active - tracking wallets
[2m2025-08-31T04:35:58.767480Z[0m [34mDEBUG[0m ThreadId(06) [1mrun[0m:[1msubscribe_market_events[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m New market event subscriber added [3mtotal_subscribers[0m[2m=[0m4
[2m2025-08-31T04:35:58.767506Z[0m [34mDEBUG[0m ThreadId(06) [1mrun[0m:[1msubscribe_market_events[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m New market event subscriber added [3mtotal_subscribers[0m[2m=[0m4
[2m2025-08-31T04:35:58.767528Z[0m [34mDEBUG[0m ThreadId(04) [1mrun[0m:[1msubscribe_trading_signals[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m New trading signal subscriber added [3mtotal_subscribers[0m[2m=[0m3
[2m2025-08-31T04:35:58.767558Z[0m [34mDEBUG[0m ThreadId(04) [1mrun[0m:[1msubscribe_trading_signals[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m New trading signal subscriber added [3mtotal_subscribers[0m[2m=[0m3
[2m2025-08-31T04:35:58.767592Z[0m [32m INFO[0m ThreadId(04) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m 📈 AnalyticsService subscriptions active - calculating metrics
[2m2025-08-31T04:35:58.767613Z[0m [34mDEBUG[0m ThreadId(04) [1mrun[0m:[1msubscribe_wallet_events[0m: [2mbadger::transport::enhanced_bus[0m[2m:[0m New wallet event subscriber added [3mtotal_subscribers[0m[2m=[0m2
[2m2025-08-31T04:35:58.767642Z[0m [32m INFO[0m ThreadId(04) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m 📦 PersistenceService subscriptions active - storing events
[2m2025-08-31T04:35:58.768007Z[0m [32m INFO[0m ThreadId(01) [1minitialize_schema[0m: [2mbadger::database::analytics::position_tracker[0m[2m:[0m ✅ Position tracker database schema initialized
[2m2025-08-31T04:35:58.768030Z[0m [32m INFO[0m ThreadId(01) [1minitialize_schema[0m: [2mbadger::database::analytics::pnl_calculator[0m[2m:[0m 🔧 Initializing P&L calculator database schema
[2m2025-08-31T04:35:58.768411Z[0m [32m INFO[0m ThreadId(04) [2mbadger::database::batch[0m[2m:[0m 📊 BATCH PROCESSING STATS:
[2m2025-08-31T04:35:58.768429Z[0m [32m INFO[0m ThreadId(04) [2mbadger::database::batch[0m[2m:[0m    📦 Market Events Processed: 0
[2m2025-08-31T04:35:58.768436Z[0m [32m INFO[0m ThreadId(04) [2mbadger::database::batch[0m[2m:[0m    📶 Trading Signals Processed: 0
[2m2025-08-31T04:35:58.768442Z[0m [32m INFO[0m ThreadId(04) [2mbadger::database::batch[0m[2m:[0m    ⚡ Total Throughput: 0 events
[2m2025-08-31T04:35:58.768441Z[0m [34mDEBUG[0m ThreadId(06) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m 📊 Analytics calculation skipped - no real trading data yet
[2m2025-08-31T04:35:58.768449Z[0m [32m INFO[0m ThreadId(05) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m 🧹 Running full cleanup and archiving
[2m2025-08-31T04:35:58.768409Z[0m [34mDEBUG[0m ThreadId(07) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m 🧮 Updating wallet intelligence scores
[2m2025-08-31T04:35:58.768470Z[0m [34mDEBUG[0m ThreadId(07) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m 🏆 Wallet reporting skipped - no real wallet scores yet
[2m2025-08-31T04:35:58.768629Z[0m [32m INFO[0m ThreadId(05) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m 📊 Database Stats: 0 events, 0 signals stored
[2m2025-08-31T04:35:58.768647Z[0m [34mDEBUG[0m ThreadId(05) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m 💾 Database health check - SQLite auto-persisting
[2m2025-08-31T04:35:58.770168Z[0m [32m INFO[0m ThreadId(07) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m 📊 DATABASE STATISTICS:
[2m2025-08-31T04:35:58.770182Z[0m [32m INFO[0m ThreadId(07) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m    🗄️ Market Events Stored: 0
[2m2025-08-31T04:35:58.770193Z[0m [32m INFO[0m ThreadId(07) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m    📶 Trading Signals: 0
[2m2025-08-31T04:35:58.770203Z[0m [32m INFO[0m ThreadId(07) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m    ⏱️ Session Runtime: 0.0m
[2m2025-08-31T04:35:58.770213Z[0m [32m INFO[0m ThreadId(07) [1mrun[0m: [2mbadger::database::services[0m[2m:[0m    💾 Database Size: 0 records
[2m2025-08-31T04:35:58.773336Z[0m [32m INFO[0m ThreadId(01) [1minitialize_schema[0m: [2mbadger::database::analytics::pnl_calculator[0m[2m:[0m ✅ P&L calculator database schema initialized
[2m2025-08-31T04:35:58.773372Z[0m [32m INFO[0m ThreadId(01) [1minitialize_schema[0m: [2mbadger::database::analytics::performance_tracker[0m[2m:[0m 🔧 Performance tracker schema initialization (skipped - handled by migration system)
[2m2025-08-31T04:35:58.773383Z[0m [32m INFO[0m ThreadId(01) [1minitialize_schema[0m: [2mbadger::database::analytics::performance_tracker[0m[2m:[0m ✅ Performance tracker schema ready
[2m2025-08-31T04:35:58.773400Z[0m [32m INFO[0m ThreadId(01) [1minitialize_schema[0m: [2mbadger::database::analytics::insider_analytics[0m[2m:[0m 🔧 Initializing insider analytics database schema
[2m2025-08-31T04:35:58.774700Z[0m [34mDEBUG[0m ThreadId(08) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m 🧹 Running VACUUM to reclaim disk space
[2m2025-08-31T04:35:58.778499Z[0m [34mDEBUG[0m ThreadId(08) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m ✅ VACUUM completed
[2m2025-08-31T04:35:58.778514Z[0m [32m INFO[0m ThreadId(08) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m ✅ Full cleanup completed:
[2m2025-08-31T04:35:58.778524Z[0m [32m INFO[0m ThreadId(08) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m    📊 Hot records: 0
[2m2025-08-31T04:35:58.778533Z[0m [32m INFO[0m ThreadId(08) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m    🔥 Warm records: 0
[2m2025-08-31T04:35:58.778542Z[0m [32m INFO[0m ThreadId(08) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m    ❄️  Archived records: 0
[2m2025-08-31T04:35:58.778550Z[0m [32m INFO[0m ThreadId(08) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m    🗑️  Deleted records: 0
[2m2025-08-31T04:35:58.778558Z[0m [32m INFO[0m ThreadId(08) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m    💾 Disk space freed: 0.00 MB
[2m2025-08-31T04:35:58.778572Z[0m [34mDEBUG[0m ThreadId(08) [1mrun[0m: [2mbadger::database::cleanup[0m[2m:[0m 🧹 Running light cleanup
[2m2025-08-31T04:35:58.787796Z[0m [32m INFO[0m ThreadId(01) [1minitialize_schema[0m: [2mbadger::database::analytics::insider_analytics[0m[2m:[0m ✅ Insider analytics database schema initialized
[2m2025-08-31T04:35:58.787821Z[0m [32m INFO[0m ThreadId(01) [2mbadger::intelligence[0m[2m:[0m 🧠 Initializing Wallet Intelligence Engine
[2m2025-08-31T04:35:58.787831Z[0m [32m INFO[0m ThreadId(01) [2mbadger::intelligence::cache[0m[2m:[0m 🧠 Initializing WalletIntelligenceCache with config: min_confidence=0.75, max_token_age=30min
[2m2025-08-31T04:35:58.788473Z[0m [32m INFO[0m ThreadId(01) [1mload_existing_insiders[0m: [2mbadger::intelligence::insider_detector[0m[2m:[0m 📊 Loaded 0 existing insider wallets from database
[2m2025-08-31T04:35:58.788499Z[0m [34mDEBUG[0m ThreadId(01) [2mbadger::intelligence::cache[0m[2m:[0m 🏆 Updated top performers list with 0 wallets
[2m2025-08-31T04:35:58.788508Z[0m [32m INFO[0m ThreadId(01) [2mbadger::intelligence::cache[0m[2m:[0m ✅ Cache initialized with 0 insider wallets (0 active, 0 blacklisted)
[2m2025-08-31T04:35:58.788515Z[0m [32m INFO[0m ThreadId(01) [2mbadger::intelligence[0m[2m:[0m ✅ Wallet Intelligence Engine initialized with 0 insider wallets
[2m2025-08-31T04:35:58.788523Z[0m [32m INFO[0m ThreadId(01) [2mbadger::intelligence[0m[2m:[0m 🔧 Initializing wallet intelligence database schema
[2m2025-08-31T04:35:58.788544Z[0m [32m INFO[0m ThreadId(01) [1minitialize_schema[0m: [2mbadger::intelligence::insider_detector[0m[2m:[0m 🔧 Initializing insider detector database schema
[2m2025-08-31T04:35:58.792807Z[0m [31mERROR[0m ThreadId(01) [2mbadger[0m[2m:[0m ❌ Failed to start services: Failed to initialize wallet intelligence schema: Query execution failed: Failed to create index: error returned from database: (code: 1) no such column: trade_outcome
[2m2025-08-31T04:35:58.792845Z[0m [32m INFO[0m ThreadId(05) [2mbadger[0m[2m:[0m 🛑 Transport Monitor received shutdown signal
[2m2025-08-31T04:35:58.792854Z[0m [32m INFO[0m ThreadId(05) [2mbadger[0m[2m:[0m ✅ Transport Monitor completed successfully
Error: Failed to initialize wallet intelligence schema: Query execution failed: Failed to create index: error returned from database: (code: 1) no such column: trade_outcome
