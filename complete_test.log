   Compiling badger v0.1.0 (/Users/ebot/personal/badger)
error[E0425]: cannot find value `create_insider_wallets_table` in this scope
   --> src/intelligence/insider_detector.rs:104:21
    |
36  |         let _create_insider_wallets_table = r#"
    |             ----------------------------- `_create_insider_wallets_table` defined here
...
104 |         sqlx::query(create_insider_wallets_table)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: the leading underscore in `_create_insider_wallets_table` marks it as unused, consider renaming it to `create_insider_wallets_table`
    |
36  -         let _create_insider_wallets_table = r#"
36  +         let create_insider_wallets_table = r#"
    |

warning: unused import: `anyhow::Result`
 --> src/core/dex_types.rs:1:5
  |
1 | use anyhow::Result;
  |     ^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `solana_sdk::pubkey::Pubkey`
 --> src/core/dex_types.rs:4:5
  |
4 | use solana_sdk::pubkey::Pubkey;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Path`
  --> src/core/wallet_management.rs:13:17
   |
13 | use std::path::{Path, PathBuf};
   |                 ^^^^

warning: unused import: `error`
  --> src/core/wallet_management.rs:14:27
   |
14 | use tracing::{info, warn, error, debug};
   |                           ^^^^^

warning: unused import: `warn`
 --> src/ingest/dex_parsers.rs:4:22
  |
4 | use tracing::{debug, warn};
  |                      ^^^^

warning: unused import: `error`
 --> src/transport/enhanced_bus.rs:3:28
  |
3 | use tracing::{debug, warn, error, instrument};
  |                            ^^^^^

warning: unused import: `error`
 --> src/transport/routing.rs:5:28
  |
5 | use tracing::{debug, warn, error, instrument};
  |                            ^^^^^

warning: unused import: `EnhancedTradingSignal`
  --> src/transport/routing.rs:10:72
   |
10 | use crate::transport::{EnhancedTransportBus, WalletEvent, SystemAlert, EnhancedTradingSignal};
   |                                                                        ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::VecDeque`
 --> src/database/mod.rs:1:5
  |
1 | use std::collections::VecDeque;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Duration` and `Instant`
 --> src/database/mod.rs:3:17
  |
3 | use std::time::{Duration, Instant};
  |                 ^^^^^^^^  ^^^^^^^

warning: unused imports: `Mutex` and `broadcast`
 --> src/database/mod.rs:4:19
  |
4 | use tokio::sync::{broadcast, Mutex};
  |                   ^^^^^^^^^  ^^^^^

warning: unused imports: `debug`, `instrument`, and `warn`
 --> src/database/mod.rs:5:21
  |
5 | use tracing::{info, warn, error, debug, instrument};
  |                     ^^^^         ^^^^^  ^^^^^^^^^^

warning: unused imports: `MarketEvent` and `TradingSignal`
 --> src/database/mod.rs:7:19
  |
7 | use crate::core::{MarketEvent, TradingSignal};
  |                   ^^^^^^^^^^^  ^^^^^^^^^^^^^

warning: unused imports: `SystemAlert` and `WalletEvent`
 --> src/database/mod.rs:8:63
  |
8 | use crate::transport::{EnhancedTransportBus, ServiceRegistry, WalletEvent, SystemAlert};
  |                                                               ^^^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/database/models.rs:3:5
  |
3 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `DateTime`
 --> src/database/models.rs:5:14
  |
5 | use chrono::{DateTime, Utc};
  |              ^^^^^^^^

warning: unused import: `Instant`
 --> src/database/services.rs:2:27
  |
2 | use std::time::{Duration, Instant};
  |                           ^^^^^^^

warning: unused import: `tokio::sync::broadcast`
 --> src/database/services.rs:3:5
  |
3 | use tokio::sync::broadcast;
  |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `error`
 --> src/database/services.rs:4:27
  |
4 | use tracing::{info, warn, error, debug, instrument};
  |                           ^^^^^

warning: unused imports: `SystemAlert` and `WalletEvent`
 --> src/database/services.rs:7:63
  |
7 | use crate::transport::{EnhancedTransportBus, ServiceRegistry, WalletEvent, SystemAlert};
  |                                                               ^^^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `AnalyticsData`
  --> src/database/services.rs:10:37
   |
10 | use super::models::{BadgerDatabase, AnalyticsData, WalletScore};
   |                                     ^^^^^^^^^^^^^

warning: unused import: `warn`
 --> src/database/batch.rs:7:28
  |
7 | use tracing::{debug, info, warn, error, instrument};
  |                            ^^^^

warning: unused import: `warn`
 --> src/database/validation.rs:4:22
  |
4 | use tracing::{debug, warn, error};
  |                      ^^^^

warning: unused import: `Path`
 --> src/database/cleanup.rs:1:17
  |
1 | use std::path::{Path, PathBuf};
  |                 ^^^^

warning: unused import: `DateTime`
 --> src/database/analytics/position_tracker.rs:3:14
  |
3 | use chrono::{DateTime, Utc};
  |              ^^^^^^^^

warning: unused imports: `debug` and `error`
 --> src/database/analytics/position_tracker.rs:6:15
  |
6 | use tracing::{debug, info, warn, error, instrument};
  |               ^^^^^              ^^^^^

warning: unused import: `MarketEvent`
 --> src/database/analytics/position_tracker.rs:8:19
  |
8 | use crate::core::{MarketEvent, TradingSignal};
  |                   ^^^^^^^^^^^

warning: unused import: `DateTime`
 --> src/database/analytics/pnl_calculator.rs:3:14
  |
3 | use chrono::{DateTime, Utc};
  |              ^^^^^^^^

warning: unused imports: `error` and `warn`
 --> src/database/analytics/pnl_calculator.rs:6:28
  |
6 | use tracing::{debug, info, warn, error, instrument};
  |                            ^^^^  ^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/database/analytics/performance_tracker.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `DateTime` and `Duration`
 --> src/database/analytics/performance_tracker.rs:3:14
  |
3 | use chrono::{DateTime, Utc, Duration};
  |              ^^^^^^^^       ^^^^^^^^

warning: unused imports: `error` and `warn`
 --> src/database/analytics/performance_tracker.rs:6:28
  |
6 | use tracing::{debug, info, warn, error, instrument};
  |                            ^^^^  ^^^^^

warning: unused import: `PortfolioPnL`
 --> src/database/analytics/performance_tracker.rs:9:44
  |
9 | use super::pnl_calculator::{PnLCalculator, PortfolioPnL};
  |                                            ^^^^^^^^^^^^

warning: unused import: `DateTime`
 --> src/database/analytics/insider_analytics.rs:3:14
  |
3 | use chrono::{DateTime, Utc};
  |              ^^^^^^^^

warning: unused imports: `error` and `warn`
 --> src/database/analytics/insider_analytics.rs:6:28
  |
6 | use tracing::{debug, info, warn, error, instrument};
  |                            ^^^^  ^^^^^

warning: unused imports: `MarketEvent` and `TradingSignal`
  --> src/database/analytics/insider_analytics.rs:10:19
   |
10 | use crate::core::{MarketEvent, TradingSignal};
   |                   ^^^^^^^^^^^  ^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `reset-db`
   --> src/database/migrations.rs:362:11
    |
362 |     #[cfg(feature = "reset-db")]
    |           ^^^^^^^^^^^^^^^^^^^^ help: remove the condition
    |
    = note: no expected values for `feature`
    = help: consider adding `reset-db` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unused import: `std::collections::HashMap`
  --> src/intelligence/insider_detector.rs:10:5
   |
10 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `error` and `warn`
  --> src/intelligence/insider_detector.rs:13:28
   |
13 | use tracing::{info, debug, warn, error, instrument};
   |                            ^^^^  ^^^^^

warning: unused imports: `error` and `warn`
  --> src/intelligence/performance_tracker.rs:15:28
   |
15 | use tracing::{info, debug, warn, error, instrument};
   |                            ^^^^  ^^^^^

warning: unused import: `std::sync::atomic::AtomicU64`
 --> src/intelligence/types.rs:3:5
  |
3 | use std::sync::atomic::AtomicU64;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `DateTime` and `Utc`
 --> src/intelligence/types.rs:4:14
  |
4 | use chrono::{DateTime, Utc};
  |              ^^^^^^^^  ^^^

warning: unused import: `File`
 --> src/intelligence/mmap_db.rs:8:15
  |
8 | use std::fs::{File, OpenOptions};
  |               ^^^^

warning: unused import: `xxhash_rust::xxh64::xxh64`
  --> src/intelligence/mmap_db.rs:10:5
   |
10 | use xxhash_rust::xxh64::xxh64;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `debug`, `error`, and `warn`
  --> src/intelligence/mmap_db.rs:11:21
   |
11 | use tracing::{info, debug, warn, error};
   |                     ^^^^^  ^^^^  ^^^^^

warning: unused import: `std::collections::HashMap`
  --> src/trading/jupiter_client.rs:10:5
   |
10 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::intelligence::SignalUrgency`
  --> src/trading/execution_engine.rs:14:5
   |
14 | use crate::intelligence::SignalUrgency;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated function `base64::encode`: Use Engine::encode
   --> src/core/wallet_management.rs:292:20
    |
292 |         Ok(base64::encode(encrypted))
    |                    ^^^^^^
    |
    = note: `#[warn(deprecated)]` on by default

warning: use of deprecated function `base64::decode`: Use Engine::decode
   --> src/core/wallet_management.rs:303:39
    |
303 |         let encrypted_bytes = base64::decode(encrypted_key)
    |                                       ^^^^^^

warning: use of deprecated function `base64::decode`: Use Engine::decode
   --> src/ingest/dex_parsers.rs:134:55
    |
134 |                     if let Ok(decoded_data) = base64::decode(data_str) {
    |                                                       ^^^^^^

warning: use of deprecated function `base64::decode`: Use Engine::decode
   --> src/trading/jupiter_client.rs:505:41
    |
505 |         let transaction_bytes = base64::decode(&swap_response.swap_transaction)
    |                                         ^^^^^^

warning: unreachable statement
   --> src/database/analytics/performance_tracker.rs:104:9
    |
101 |           return Ok(());
    |           ------------- any code following this expression is unreachable
...
104 | /         let _create_performance_snapshots = r#"
105 | |             CREATE TABLE IF NOT EXISTS performance_snapshots (
106 | |                 id INTEGER PRIMARY KEY AUTOINCREMENT,
107 | |                 period_type TEXT NOT NULL CHECK (period_type IN ('HOURLY', 'DAILY', 'WEEKLY', 'MONTHLY')),
...   |
133 | |         "#;
    | |___________^ unreachable statement
    |
    = note: `#[warn(unreachable_code)]` on by default

warning: unused variable: `create_signal_performance`
   --> src/database/analytics/performance_tracker.rs:135:13
    |
135 |         let create_signal_performance = r#"
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_create_signal_performance`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `create_trading_sessions`
   --> src/database/analytics/performance_tracker.rs:154:13
    |
154 |         let create_trading_sessions = r#"
    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_create_trading_sessions`

warning: unused variable: `create_indexes`
   --> src/database/analytics/performance_tracker.rs:173:13
    |
173 |         let create_indexes = vec![
    |             ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_create_indexes`

warning: unreachable statement
  --> src/intelligence/insider_detector.rs:36:9
   |
33 |           return Ok(());
   |           ------------- any code following this expression is unreachable
...
36 | /         let _create_insider_wallets_table = r#"
37 | |             CREATE TABLE IF NOT EXISTS insider_wallets (
38 | |                 address TEXT PRIMARY KEY,
39 | |                 confidence_score REAL NOT NULL,
...  |
55 | |         "#;
   | |___________^ unreachable statement

warning: variable `total_profit` is assigned to, but never used
   --> src/intelligence/insider_detector.rs:498:17
    |
498 |         let mut total_profit = 0.0f64;
    |                 ^^^^^^^^^^^^
    |
    = note: consider using `_total_profit` instead

warning: use of deprecated method `chrono::NaiveDateTime::timestamp`: use `.and_utc().timestamp()` instead
   --> src/intelligence/copy_trader.rs:421:81
    |
421 |         let today_start = Utc::now().date_naive().and_hms_opt(0, 0, 0).unwrap().timestamp();
    |                                                                                 ^^^^^^^^^

warning: use of deprecated method `chrono::NaiveDateTime::timestamp`: use `.and_utc().timestamp()` instead
   --> src/intelligence/copy_trader.rs:443:81
    |
443 |         let today_start = Utc::now().date_naive().and_hms_opt(0, 0, 0).unwrap().timestamp();
    |                                                                                 ^^^^^^^^^

warning: unused variable: `result_str`
   --> src/intelligence/background_sync.rs:277:13
    |
277 |         let result_str = match result.result {
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_result_str`

warning: unused variable: `exit_reason_str`
   --> src/intelligence/background_sync.rs:283:13
    |
283 |         let exit_reason_str = match result.exit_reason {
    |             ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_exit_reason_str`

warning: unused variable: `recent_cutoff`
   --> src/intelligence/performance_tracker.rs:213:13
    |
213 |         let recent_cutoff = Utc::now().timestamp() - (self.config.recent_performance_days as i64 * 24 * 3600);
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_recent_cutoff`

warning: unused variable: `wins`
   --> src/intelligence/performance_tracker.rs:500:17
    |
500 |             let wins: i64 = performer.try_get("wins").unwrap_or(0);
    |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_wins`

warning: use of deprecated method `chrono::DateTime::<Tz>::timestamp_nanos`: use `timestamp_nanos_opt()` instead
   --> src/core/dex_types.rs:155:85
    |
155 |                 format!("liquidity_changed_{}_{}", pool_address, chrono::Utc::now().timestamp_nanos())
    |                                                                                     ^^^^^^^^^^^^^^^

warning: use of deprecated method `chrono::DateTime::<Tz>::timestamp_nanos`: use `timestamp_nanos_opt()` instead
   --> src/core/dex_types.rs:243:69
    |
243 |                 format!("buy_{}_{}", token_mint, chrono::Utc::now().timestamp_nanos())
    |                                                                     ^^^^^^^^^^^^^^^

warning: use of deprecated method `chrono::DateTime::<Tz>::timestamp_nanos`: use `timestamp_nanos_opt()` instead
   --> src/core/dex_types.rs:246:70
    |
246 |                 format!("sell_{}_{}", token_mint, chrono::Utc::now().timestamp_nanos())
    |                                                                      ^^^^^^^^^^^^^^^

warning: use of deprecated method `chrono::DateTime::<Tz>::timestamp_nanos`: use `timestamp_nanos_opt()` instead
   --> src/core/dex_types.rs:249:70
    |
249 |                 format!("swap_{}_{}", token_mint, chrono::Utc::now().timestamp_nanos())
    |                                                                      ^^^^^^^^^^^^^^^

warning: unused import: `Row`
 --> src/database/models.rs:2:12
  |
2 | use sqlx::{Row, FromRow, SqlitePool};
  |            ^^^

warning: unused import: `TimeZone`
 --> src/database/cleanup.rs:6:29
  |
6 | use chrono::{DateTime, Utc, TimeZone};
  |                             ^^^^^^^^

warning: unused variable: `subscription_id`
  --> src/ingest/dex_parsers.rs:16:33
   |
16 |     pub fn parse_program_update(subscription_id: u64, data: &Value) -> Result<Vec<MarketEvent>> {
   |                                 ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_subscription_id`

warning: unused variable: `slot`
   --> src/ingest/dex_parsers.rs:163:81
    |
163 |     fn parse_orca_event(account: &serde_json::Map<String, Value>, pubkey: &str, slot: u64) -> Result<Vec<MarketEvent>> {
    |                                                                                 ^^^^ help: if this is intentional, prefix it with an underscore: `_slot`

warning: variable does not need to be mutable
   --> src/ingest/dex_parsers.rs:164:13
    |
164 |         let mut events = Vec::new();
    |             ----^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `instruction_data`
   --> src/ingest/dex_parsers.rs:338:31
    |
338 |     pub fn parse_raydium_swap(instruction_data: &[u8]) -> Result<SwapEvent> {
    |                               ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_instruction_data`

warning: unused variable: `instruction_data`
   --> src/ingest/dex_parsers.rs:345:31
    |
345 |     pub fn parse_jupiter_swap(instruction_data: &[u8]) -> Result<SwapEvent> {
    |                               ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_instruction_data`

For more information about this error, try `rustc --explain E0425`.
warning: `badger` (lib) generated 74 warnings
error: could not compile `badger` (lib) due to 1 previous error; 74 warnings emitted
